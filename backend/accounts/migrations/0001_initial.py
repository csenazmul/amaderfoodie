# Generated by Django 5.2.5 on 2025-08-18 02:06

import django.contrib.auth.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email Address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=30, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=30, verbose_name="Last Name"),
                ),
                (
                    "bio",
                    models.TextField(blank=True, max_length=500, verbose_name="Bio"),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Location"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Phone Number"
                    ),
                ),
                ("website", models.URLField(blank=True, verbose_name="Website")),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_images/",
                        verbose_name="Profile Image",
                    ),
                ),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="cover_images/",
                        verbose_name="Cover Image",
                    ),
                ),
                (
                    "facebook",
                    models.URLField(blank=True, verbose_name="Facebook Profile"),
                ),
                (
                    "twitter",
                    models.URLField(blank=True, verbose_name="Twitter Profile"),
                ),
                (
                    "instagram",
                    models.URLField(blank=True, verbose_name="Instagram Profile"),
                ),
                (
                    "linkedin",
                    models.URLField(blank=True, verbose_name="LinkedIn Profile"),
                ),
                (
                    "is_chef",
                    models.BooleanField(
                        default=False, verbose_name="Is Professional Chef"
                    ),
                ),
                (
                    "chef_experience",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Years of Experience",
                    ),
                ),
                (
                    "specialties",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Specialties (comma separated)",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Email Notifications"
                    ),
                ),
                (
                    "marketing_emails",
                    models.BooleanField(default=False, verbose_name="Marketing Emails"),
                ),
                (
                    "recipes_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Recipes Count"
                    ),
                ),
                (
                    "blogs_count",
                    models.PositiveIntegerField(default=0, verbose_name="Blogs Count"),
                ),
                (
                    "followers_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Followers Count"
                    ),
                ),
                (
                    "following_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Following Count"
                    ),
                ),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("last_login", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Email Verified"),
                ),
                (
                    "is_premium",
                    models.BooleanField(default=False, verbose_name="Premium User"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ["-date_joined"],
            },
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("recipe_created", "Recipe Created"),
                            ("recipe_updated", "Recipe Updated"),
                            ("recipe_deleted", "Recipe Deleted"),
                            ("recipe_liked", "Recipe Liked"),
                            ("recipe_saved", "Recipe Saved"),
                            ("recipe_commented", "Recipe Commented"),
                            ("blog_created", "Blog Created"),
                            ("blog_updated", "Blog Updated"),
                            ("blog_deleted", "Blog Deleted"),
                            ("blog_liked", "Blog Liked"),
                            ("blog_commented", "Blog Commented"),
                            ("profile_updated", "Profile Updated"),
                            ("user_followed", "User Followed"),
                            ("user_unfollowed", "User Unfollowed"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "related_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("related_object_type", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Activity",
                "verbose_name_plural": "User Activities",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("O", "Other"),
                            ("P", "Prefer not to say"),
                        ],
                        max_length=1,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, null=True, verbose_name="Birth Date"),
                ),
                ("address", models.TextField(blank=True, verbose_name="Address")),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="City"),
                ),
                (
                    "state",
                    models.CharField(blank=True, max_length=100, verbose_name="State"),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Country"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Postal Code"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en", max_length=10, verbose_name="Preferred Language"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC", max_length=50, verbose_name="Timezone"
                    ),
                ),
                ("email_on_new_follower", models.BooleanField(default=True)),
                ("email_on_recipe_comment", models.BooleanField(default=True)),
                ("email_on_blog_comment", models.BooleanField(default=True)),
                ("email_on_new_recipe", models.BooleanField(default=False)),
                ("email_on_new_blog", models.BooleanField(default=False)),
                ("show_email", models.BooleanField(default=False)),
                ("show_phone", models.BooleanField(default=False)),
                ("show_birth_date", models.BooleanField(default=False)),
                ("allow_messages", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
            },
        ),
        migrations.CreateModel(
            name="Follower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "following",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Follower",
                "verbose_name_plural": "Followers",
                "unique_together": {("follower", "following")},
            },
        ),
    ]
